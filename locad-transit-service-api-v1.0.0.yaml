swagger: '2.0'
info:
  description: |-
    This api doc contains 2 partsItem
    1. Api  is implemented by igloo
    2. WbHook Api is implemented by locad(The authentication method is defined by the partner)
  version: 1.0.0
  title: Locad Transit Service Api
  license:
    name: N/A
  contact:
    name: nick.du
    email: nick.du@iglooinsure.com
host: api.staging.iglooinsure.com
basePath: /v1/transit-locad/partner
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/stock_inbound':
    post:
      parameters:
        - in: body
          name: StockInboundRequest
          required: false
          schema:
            $ref: '#/definitions/StockInboundRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StockInboundResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      operationId: Warehouse Stock Inbound
      description: 'Through the API, partners send the inbound data to igloo'
      security:
        - ApiKeyAuth: [ ]
      tags:
        - transit
      summary: Stock Inbound

  '/stock_outbound':
    post:
      parameters:
        - in: body
          name: StockInboundRequest
          required: false
          schema:
            $ref: '#/definitions/StockOutboundRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StockOutboundResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      operationId: Warehouse Stock Outbound
      description: 'Through the API, partners send the outbound data to igloo'
      security:
        - ApiKeyAuth: [ ]
      tags:
        - transit
      summary: Stock Outbound

  '/stock_found':
    post:
      parameters:
        - in: body
          name: StockFoundRequest
          required: false
          schema:
            $ref: '#/definitions/StockFoundRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StockFoundResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      operationId: Warehouse Stock Found
      description: 'Through the API, partners send the outbound data to igloo'
      security:
        - ApiKeyAuth: [ ]
      tags:
        - transit
      summary: Stock Found

  '/fill_claim':
    post:
      parameters:
        - in: body
          name: FillClaimRequest
          required: false
          schema:
            $ref: '#/definitions/FillClaimRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FillClaimResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      operationId: Warehouse Stock Lost
      description: 'Through the API, partners send the lost data to igloo'
      security:
        - ApiKeyAuth: [ ]
      tags:
        - transit
      summary: Stock Lost

securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: X-Axinan-Key
    in: header

definitions:
  StockInboundRequest:
    type: object
    properties:
      sku_id:
        type: string
        description: 'SKU ID of product in db'
      series_no:
        type: string
        description: 'Series No. of product, if any'
      lot_number_tracking:
        type: string
        description: 'Lot No. Tracking of product'
      inbound_date:
        type: integer
        format: int64
        description: 'Inbound data/time of product format like 2006-01-02T15:04:05+07:00'
      product_name:
        type: string
        description: 'The name of product'
      product_category:
        type: string
        description: 'The category of product'
      sku_condition:
        type: string
        description: 'The description of product condition while inbound'
      sku_status:
        type: string
        description: 'The status of SKU/Item'
      unit_price:
        type: number
        format: double
        description: 'The Unit Price of per SKU/Item'
        example: 123456.789
      currency:
        type: string
        description: 'The currency of unit_price'
      inbound_quantity:
        type: integer
        format: int64
        description: 'The inbound quantity of SKU'
      umo:
        type: string
        description: 'The unit of measure of SKU'
      merchant_id:
        type: string
        description: 'The unique no. to identify the merchant'
      merchant_name:
        type: string
        description: 'The name of merchant'
      email:
        type: string
        description: 'The Email address of merchant'
      phone_number:
        type: string
        description: 'The phone no. of merchant'
      distribution_channel:
        type: string
        description: 'The primary distribution channel of the merchant'
      logistics_name:
        type: string
        description: 'The name of logistics'
      tracking_number:
        type: string
        description: 'The tracking no. of the shipment'
      warehouse_name:
        type: string
        description: 'The Name of a specific warehouse'
      country_code:
        type: string
        description: 'The code of the country in where the warehouse locates'
      province:
        type: string
        description: 'The province in where the warehouse locates'
      city:
        type: string
        description: 'The city in where the warehouse locates'
      address:
        type: string
        description: 'The address in where the warehouse locates'
    required:
      - sku_id
      - lot_number_tracking
      - inbound_date
      - product_name
      - product_category
      - sku_condition
      - sku_status
      - unit_price
      - currency
      - inbound_quantity
      - umo
      - merchant_id
      - merchant_name
      - email
      - logistics_name
      - tracking_number
      - warehouse_name
      - country_code
      - province
      - city
      - address

  StockInboundResponse:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error

  StockOutboundRequest:
    type: object
    properties:
      sku_id:
        type: string
        description: 'SKU ID of product in db'
      series_no:
        type: string
        description: 'Series No. of product, if any'
      lot_number_tracking:
        type: string
        description: 'Lot No. Tracking of product'
      outbound_date:
        type: integer
        format: int64
        description: 'Outbound data/time of product format like 2006-01-02T15:04:05+07:00'
      sku_condition:
        type: string
        description: 'The description of product condition while inbound'
      sku_status:
        type: string
        description: 'The status of SKU/Item'
      outbound_quantity:
        type: integer
        format: int64
        description: 'The outbound quantity of SKU'
      umo:
        type: string
        description: 'The unit of measure of SKU'
      logistics_name:
        type: string
        description: 'The name of logistics'
      tracking_number:
        type: string
        description: 'The tracking no. of the shipment'
      warehouse_name:
        type: string
        description: 'The Name of a specific warehouse'
      country_code:
        type: string
        description: 'The code of the country in where the warehouse locates'
      province:
        type: string
        description: 'The province in where the warehouse locates'
      city:
        type: string
        description: 'The city in where the warehouse locates'
      address:
        type: string
        description: 'The address in where the warehouse locates'
    required:
      - sku_id
      - lot_number_tracking
      - outbound_date
      - sku_condition
      - sku_status
      - outbound_quantity
      - umo
      - logistics_name
      - tracking_number
      - warehouse_name
      - country_code
      - province
      - city
      - address

  StockOutboundResponse:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error

  StockFoundRequest:
    type: object
    properties:
      sku_id:
        type: string
        description: 'SKU ID of product in db'
      series_no:
        type: string
        description: 'Series No. of product, if any'
      lot_number_tracking:
        type: string
        description: 'Lot No. Tracking of product'
      found_date:
        type: integer
        format: int64
        description: 'found data/time of product format like 2006-01-02T15:04:05+07:00'
      sku_condition:
        type: string
        description: 'The description of product condition while inbound'
      sku_status:
        type: string
        description: 'The status of SKU/Item'
      found_quantity:
        type: integer
        format: int64
        description: 'The found quantity of SKU'
    required:
      - sku_id
      - lot_number_tracking
      - found_date
      - sku_condition
      - sku_status
      - found_quantity

  StockFoundResponse:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error


  FillClaimRequest:
    type: object
    properties:
      sku_id:
        type: string
        description: 'SKU ID of product in db'
      series_no:
        type: string
        description: 'Series No. of product, if any'
      lot_number_tracking:
        type: string
        description: 'Lot No. Tracking of product'
      claim_quantity:
        type: integer
        format: int64
        description: 'The submit_claim quantity of SKU'
      claim_type:
        type: string
        example: "Damage/Lost"
        description: 'submit_claim type Damage or Lost'
      claim_reason:
        type: string
        description: 'description of why you submit_claim'
      incident_date:
        type: string
        example: '2006-01-02T15:04:05Z07:00'
      package_photos:
        type: array
        description: 'multi should split with ;'
        items:
          type: string
      police_document:
        type: array
        description: 'policy pdf file or photos, only lost needed, multi should split with ;'
        items:
          type: string
      sku_photos:
        type: array
        description: 'photos of sku, multi should split with ;'
        items:
          type: string
    required:
      - sku_id
      - claim_quantity
      - claim_type
      - claim_reason
      - incident_date

  FillClaimResponse:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error

  WarehouseInfo:
    type: object
    properties:
      warehouse_name:
        type: string
        description: 'The Name of a specific warehouse'
      country_code:
        type: string
        description: 'The code of the country in where the warehouse locates'
      province:
        type: string
        description: 'The province in where the warehouse locates'
      city:
        type: string
        description: 'The city in where the warehouse locates'
      address:
        type: string
        description: 'The address in where the warehouse locates'
    required:
      - warehouse_name
      - country_code
      - province
      - city
      - address

  MerchantInfo:
    type: object
    properties:
      merchant_id:
        type: string
        description: 'The unique no. to identify the erchant'
      merchant_name:
        type: string
        description: 'The name of merchant'
      email:
        type: string
        description: 'The Email address of merchant'
      phone_number:
        type: string
        description: 'The phone no. of merchant'
      distribution_channel:
        type: string
        description: 'The primary distribution channel of the merchant'
    required:
      - merchant_id
      - merchant_name
      - email

  LogisticsInfo:
    type: object
    properties:
      logistics_name:
        type: string
        description: 'The name of logistics'
      tracking_number:
        type: string
        description: 'The tracking no. of the shipment'
    required:
      - logistics_name
      - tracking_number

  Error:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error