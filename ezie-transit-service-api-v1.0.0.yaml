swagger: '2.0'
info:
  description: |-
    This api doc contains 2 parts Item
    1. Api  is implemented by igloo
    2. WebHook Api is implemented by ezie, and is used by igloo to notify ezie of the status update of policy and claim. (The authentication method is defined by the partner)
  version: 1.0.0
  title: EZIE Transit Service Api
  license:
    name: N/A
  contact:
    name: nick.du
    email: nick.du@iglooinsure.com
host: api.staging.iglooinsure.com
basePath: /v1/transit-ezie/partner
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /transits:
    post:
      parameters:
        - in: body
          name: CreatePolicyRequest
          required: false
          schema:
            $ref: '#/definitions/CreateTransitRequest'
          x-examples: {}
          description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTransitResponse'
          examples:
            example-1:
              value:
                policy:
                  state: Issued
                  claim_period_end_timestamp: 0
                  purchased_timestamp: 0
                  policy_start_timestamp: 0
                  policy_end_timestamp: 0
                  premium: 0
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      operationId: Create Transit
      description: 'Through the API, partner send the parcel data to igloo to create insurance policies'
      security:
        - ApiKeyAuth: []
      tags:
        - transit
      summary: Create Transit
    parameters: []
  '/transits/{transit_id}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTransitResponse'
          examples: {}
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - ApiKeyAuth: []
      operationId: Get Transit
      description: Get Transit
      tags:
        - transit
      summary: Get Transit
    parameters:
      - type: string
        name: transit_id
        in: path
        description: Partner's internal ID for the order
        required: true
  '/transits/{transit_id}/claims':
    get:
      summary: Get Claim list
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClaimsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - ApiKeyAuth: []
      operationId: Get claim list of transit
      description: Get claim list of transit
      tags:
        - claim
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
  '/claims/{claim_id}':
    get:
      summary: Get Claim
      parameters:
        - name: claim_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClaimResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - claim
      description: Get Claim
      operationId: Get Claim
    parameters:
      - type: string
        name: claim_id
        in: path
        required: true
        description: Claim ID of igloo
  '/claims/{claim_id}/reimburse':
    parameters:
      - type: string
        name: claim_id
        in: path
        required: true
        description: Claim ID of igloo
    put:
      summary: Approved Claim Reimburse
      operationId: Approved Claim Reimburse
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              claim:
                $ref: '#/definitions/Claim'
        '400':
          $ref: '#/responses/errForbiddenResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
      tags:
        - claim
      description: The partner calls the api to notify igloo after completing the approved claim payment
      parameters:
        - in: body
          name: body
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                reimbursed_timestamp: 0
            properties:
              reimbursed_timestamp:
                type: integer
                format: int64
                description: unix timestamp(second)
            required:
              - reimbursed_timestamp
      security:
        - ApiKeyAuth: []
  '/webhook/transits/{transit_id}':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
    put:
      summary: Notify Policy State Change
      operationId: Notify Policy State Change
      responses:
        '200':
          description: OK
      description: Notify Policy State Change(Only Ended and Expired status notifyï¼‰
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NotifyPolicy'
          description: ''
      tags:
        - webhook
  '/webhook/claims/{claim_id}':
    parameters:
      - type: string
        name: claim_id
        in: path
        required: true
        description: Claim ID of igloo
    put:
      summary: Notify Claim State Change
      operationId: Notify Claim State Change
      responses:
        '200':
          description: OK
      description: Notify Claim State Change
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NotifyClaim'
      tags:
        - webhook
  /webhook/claims:
    post:
      summary: Notify Claim Create
      operationId: Notify Claim Create
      responses:
        '200':
          description: OK
      description: Nofify Claim Create
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NotifyClaimCreate'
      tags:
        - webhook
  '/transits/{transit_id}/cancel':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
    put:
      summary: Cancel Transit
      tags:
        - transit
      operationId: Cancel Transit
      description: 'When the Sender cancels the order before sending the package, the partner calls the API to notify igloo to cancel the policy'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              policy:
                $ref: '#/definitions/Policy'
            example:
              policy:
                state: Cancelled
                claim_period_end_timestamp: 0
                purchased_timestamp: 0
                policy_start_timestamp: 0
                policy_end_timestamp: 0
                premium: 0
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              transit_cancelled_date:
                type: integer
                format: int64
                description: Unix timestamp(second) of Sender cancel order
                example: 1635748355
  '/transits/{transit_id}/shipout':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
    put:
      summary: Shipout Transit
      tags:
        - transit
      operationId: Shipout Transit
      description: 'When the package is sent, the partner calls the API to notify igloo to activate the policy'
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              policy:
                $ref: '#/definitions/Policy'
            example:
              policy:
                state: Activated
                claim_period_end_timestamp: 0
                purchased_timestamp: 0
                policy_start_timestamp: 0
                policy_end_timestamp: 0
                premium: 0
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              transit_shipment_date:
                type: integer
                format: int64
                description: Unix timestamp(second) of pacakge shipment date
                example: 1635748355
          x-examples:
            example-1:
              value:
                transit_shipment_date: 1635748355
  '/transits/{transit_id}/deliver':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
    put:
      summary: Deliver Transit
      tags:
        - transit
      operationId: Deliver Transit
      description: The partner calls the API to inform igloo of the time when the package is signed in
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              policy:
                $ref: '#/definitions/Policy'
            example:
              policy:
                state: Activated
                claim_period_end_timestamp: 0
                purchased_timestamp: 0
                policy_start_timestamp: 0
                policy_end_timestamp: 0
                premium: 0
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              transit_delivered_date:
                type: integer
                format: int64
                description: Unix timestamp(second) the package was signed in
                example: 1635748355
  '/transits/{transit_id}/lost':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
    put:
      summary: Lost Transit
      tags:
        - transit
      operationId: Lost Transit
      description: The partner calls the API to inform igloo that the package is lost
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              policy:
                $ref: '#/definitions/Policy'
            example:
              policy:
                state: Activated
                claim_period_end_timestamp: 0
                purchased_timestamp: 0
                policy_start_timestamp: 0
                policy_end_timestamp: 0
                premium: 0
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              transit_lost_date:
                type: integer
                format: int64
                description: Unix timestamp(second) the package lost
                example: 1635748355
          x-examples: {}
  '/transits/{transit_id}/customer_portal_url':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: Partner's internal ID for the order
    get:
      summary: Customer Portal URL For Claim
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              url:
                type: string
                description: Use a browser or webview to open the URL and enter the igloo claim web portal to submit claim
              expiry_date:
                type: integer
                description: The unix timestamp(second) of the expiry time of the url
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
      operationId: Get Customer Portal URL by Transit ID
      description: Get Customer Portal URL by Transit ID
      security:
        - ApiKeyAuth: []
      tags:
        - transit
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: X-Axinan-Key
    in: header
definitions:
  Address:
    type: object
    x-examples:
      example-1:
        formatted_address: string
        address: 2 Havelock Road
        city: Jakarta
        country_code: ID
        zip: '05225'
    properties:
      address:
        type: string
        example: 2 Havelock Road
        description: Mailing address
      city:
        type: string
        example: Jakarta
        description: 'The city, town, or village.'
      country_code:
        type: string
        example: ID
        description: The two-letter country code corresponding to the  country.
      zip:
        type: string
        example: '05225'
        description: 'The  postal code, also known as zip, postcode, Eircode, etc.'
    required:
      - city
      - country_code
  Policy:
    type: object
    properties:
      state:
        $ref: '#/definitions/PolicyState'
      claim_period_end_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec) of claim period end
      purchased_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec) of purchase policy
      policy_start_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec)  of  The start date of the policy corresponding to the parcel
      policy_end_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec) of The end date of the policy corresponding to the parcel
      premium:
        type: number
        format: double
        description: Premium calculated by Iglooinsure
  NotifyPolicy:
    type: object
    properties:
      state:
        $ref: '#/definitions/PolicyState'
      state_update_timestamp:
        type: integer
        format: int64
        example: 1636529697
        description: Unix Timestamp(second) of state update
  NotifyPolicyCreate:
    type: object
    title: NotifyPolicyCreate
    description: ''
    properties:
      created_timestamp:
        type: integer
        format: int64
        example: 1636529697
        description: Unix Timestamp(second) of create policy
  CreateTransitRequest:
    type: object
    description: ''
    x-examples: {}
    x-internal: false
    properties:
      transit_id:
        type: string
        description: Partner's internal ID for the order
      tpl_order_id:
        type: string
        description: â€˜The 3PL's internal ID of the order. Partner get's this from the 3PL upon order creationâ€™
      order_created_date:
        type: integer
        description: 'unix timestamp(sec) of Order created time of parcel '
        format: int64
        example: 1635737293
      order_paid_date:
        type: integer
        description: unix timestamp(sec) of Order payment time of parcel
        format: int64
        example: 1635737308
      order_currency:
        type: string
        description: Payment currency type of the parcel order
        example: USD
      shipping_fee:
        type: number
        format: double
        description: The shipping fee of the package
        example: 50.11
      name_of_logistics_company:
        type: string
        description: Name of logistics company
      tracking_number_of_logistics_company:
        description: The tracking number from the 3PL. Ezie get's this from the 3PL open order creation. The end user will typically use this to track the shipment
        type: string
      ship_from:
        $ref: '#/definitions/Address'
      ship_to:
        $ref: '#/definitions/Address'
      sender:
        $ref: '#/definitions/Sender'
      receiver:
        $ref: '#/definitions/Receiver'
      shipment_value:
        type: number
        format: float
        description: ' the value of the insurance of the order'
      shipment_content:
        type: string
        description: the description that partner get from the shipper regarding the content of the package
      igloo_premium:
        type: number
        format: double
        description: igloo's fee for insurance
      ezie_premium:
        type: number
        format: double
        description: ezie's fee for insurance
    required:
      - transit_id
      - tpl_order_id
      - order_created_date
      - order_paid_date
      - order_currency
      - shipping_fee
      - name_of_logistics_company
      - tracking_number_of_logistics_company
      - ship_from
      - ship_to
      - sender
      - receiver
      - shipment_value
      - shipment_content
      - igloo_premium
      - ezie_premium
  CreateTransitResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/Policy'
      customer_portal_url:
        type: string
        description: Customer Portal URL For Claim
      customer_portal_url_expiry_timestamp:
        type: string
        description: The unix timestamp(second) of the expiry time of customer portal url
  GetTransitResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/Policy'
  Claim:
    type: object
    properties:
      id:
        type: string
        description: claim id of igloo
      state:
        $ref: '#/definitions/ClaimState'
      approved_amount:
        type: number
        format: float
        description: This field is only valid when the claim is approved
      claimed_amount:
        type: number
        format: float
      claim_type:
        $ref: '#/definitions/ClaimType'
  NotifyClaim:
    type: object
    properties:
      state:
        $ref: '#/definitions/ClaimState'
      transit_id:
        type: string
        description: Partner's internal ID for the order
      state_update_timestamp:
        type: integer
        format: int64
        example: 1636529818
        description: Unix Timestamp(second) of state update
  NotifyClaimCreate:
    type: object
    properties:
      claim_id:
        type: string
        description: Claim ID of igloo
      transit_id:
        type: string
        description: Partner's internal ID for the order
      created_timestamp:
        type: integer
        format: int64
        example: 1636529818
        description: Unix Timestamp(second) of state update
    required:
      - claim_id
      - transit_id
      - created_timestamp
  GetClaimResponse:
    type: object
    properties:
      claim:
        $ref: '#/definitions/Claim'
  GetClaimsResponse:
    type: object
    properties:
      claims:
        type: array
        items:
          $ref: '#/definitions/Claim'
  ClaimState:
    type: string
    enum:
      - Requested
      - Approved
      - Rejected
      - Pending Proof
      - Cancelled
    x-examples:
      example-1: Requested
  PolicyState:
    type: string
    enum:
      - Issued
      - Activated
      - Ended
      - Expired
      - Cancelled
    description: |
      Policy State:
        * `Issued`    - The Policy is created
        * `Activated` - The policy is protected
        * `Ended`     - Policy ended with a completion of claim
        * `Expired`   - Policy expired with no claims made
        * `Cancelled` - Policy cancelled by customer
  Error:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error
  Sender:
    title: Sender
    type: object
    x-examples:
      example-1:
        id: string
        name: Carol Leonard
        email: jenniferwade@example.org
        phone: '8293055891'
    description: ''
    properties:
      id:
        type: string
        description: User ID of sender from partner
      name:
        type: string
        description: The name of the sender
        example: Carol Leonard
      email:
        type: string
        description: The sender's email
        example: jenniferwade@example.org
      phone:
        type: string
        description: The sender's phone number
        example: '8293055891'
    required:
      - id
      - name
      - email
      - phone
  Receiver:
    title: Receiver
    type: object
    x-examples:
      example-1:
        id: string
        name: David Sullivan
        email: joshua41@example.org
        phone: '3816863486'
    properties:
      id:
        type: string
        description: User ID of sender from partner
      name:
        type: string
        description: The name of the sender
        example: David Sullivan
      email:
        type: string
        description: The sender's email
        example: joshua41@example.org
      phone:
        type: string
        description: The sender's phone number
        example: '3816863486'
    required:
      - phone
  ParcelStatus:
    title: ParcelStatus
    type: object
    properties:
      status:
        type: string
        description: Status of the parcel from the partner
      status_at_date_timestamp:
        type: integer
        format: int64
        description: Date/time of parcel update to status(unix timestamp(second))
      location:
        type: string
        description: Location of the parcel from partner
      remarks_or_failed_reason:
        type: string
        description: Remarks from the partner
      billing_pictures:
        type: array
        description: Billing pictures url b merchant
        items:
          type: string
      product_pictures:
        type: array
        description: Products pictures url taken by driver
        items:
          type: string
    required:
      - status
      - status_at_date_timestamp
  ClaimType:
    type: string
    title: ClaimType
    enum:
      - Lost
      - Damage
parameters: {}
responses:
  errBadRequestResponse:
    description: Bad Request
    schema:
      $ref: '#/definitions/Error'
  errUnauthorizedResponse:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  errRequestFailedResponse:
    description: Request Failed
    schema:
      $ref: '#/definitions/Error'
  errForbiddenResponse:
    description: Forbidden
    schema:
      $ref: '#/definitions/Error'
  errNotFoundResponse:
    description: Not found
    schema:
      $ref: '#/definitions/Error'
  errConflictResponse:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  errTooManyRequestsResponse:
    description: Too Many Requests
    schema:
      $ref: '#/definitions/Error'
  errServerErrorsResponse:
    description: Server Errors
    schema:
      $ref: '#/definitions/Error'
  defaultErrorResponse:
    description: Unknown Error
    schema:
      $ref: '#/definitions/Error'
  healthCheckResponse:
    description: Server health status
    schema:
      type: string
      example: OK
  simpleStringResponse:
    description: Simple String Response
    schema:
      type: object
    examples:
      example-1: {}
security:
  - ApiKeyAuth: []
